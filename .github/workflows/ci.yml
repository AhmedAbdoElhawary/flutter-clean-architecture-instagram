# Name of our workflow which will act as an identifier when have multilple workflows.
name: Firebase CI/CD

# Define trigger point, on push on master branch, this workflow will be triggered.
on:
  push:
    branches: [ master ]

# The job(s) you want to do when the workflow is triggered
# We will be using an ubuntu-latest virtual machine to perform these processes
jobs:

  build-distribute-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: 'Build Web App'
        run: flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.FIREBASE_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: el-instagram

      # Get the latst dependencies
      - run: flutter pub get

      # Build (fat) APK
      # - run: flutter analyze .
      - run: flutter build apk --release

      # Step to Submit the generated APK to Firebase App Distribution
      - name: "Upload artifact to Firebase App Distribution"
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APPID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: tester
          file: app/build\app\outputs\flutter-apk\app.apk